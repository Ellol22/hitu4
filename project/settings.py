# """
# Django settings for project project.

# Generated by 'django-admin startproject' using Django 5.2.1.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.2/ref/settings/
# """

# from pathlib import Path
# import os

# CSRF_COOKIE_SECURE = False

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-o#!65#0zl887ux3bly7cz57vg952^su96f55!3fm9--u_7bo6+'

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ALLOWED_HOSTS = ['*']

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",
#     "https://43a6-196-157-33-94.ngrok-free.app"
# ]
# CORS_ALLOW_CREDENTIALS = True

# # ŸÑŸÑÿ≥ŸÖÿßÿ≠ ÿ®ŸÉŸÑ origins ÿ£ÿ´ŸÜÿßÿ° ÿßŸÑÿ™ÿ∑ŸàŸäÿ±:
# CORS_ALLOW_ALL_ORIGINS = True
# SRF_COOKIE_SECURE = False
# SESSION_COOKIE_SECURE = False

# # ŸÑŸà ÿ¥ÿ∫ÿßŸÑÿ© ŸÖŸÜ localhost ÿ£Ÿà React ŸÅŸä ÿØŸàŸÖŸäŸÜ ŸÖÿÆÿ™ŸÑŸÅ:
# CSRF_TRUSTED_ORIGINS = ['http://localhost:8000', 'http://127.0.0.1:8000']


# # ŸÑŸà ÿπÿßŸäÿ≤ ÿ™ÿ≠ÿØÿØ ÿßŸÑŸáŸäÿØÿ±ÿ≤ ÿßŸÑŸÖÿ≥ŸÖŸàÿ≠ ÿ®ŸäŸáÿß:
# CORS_ALLOW_HEADERS = [
#     "content-type",
#     "authorization",
#     "x-csrftoken",
#     "accept",
# ]

# # ÿ™ÿ≠ÿØŸäÿØ ÿßŸÑŸÖŸäÿ´ŸàÿØÿ≤ ÿßŸÑŸÖÿ≥ŸÖŸàÿ≠ÿ©
# CORS_ALLOW_METHODS = [
#     "GET",
#     "POST",
#     "OPTIONS",
#     "PUT",
#     "DELETE",
#     "PATCH",
# ]

# from datetime import timedelta

# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),      # üü¢ ÿπÿØŸÑŸäŸáÿß ÿ≠ÿ≥ÿ® ÿßŸÑŸÖÿ∑ŸÑŸàÿ®
#     'REFRESH_TOKEN_LIFETIME': timedelta(days=7),         # üü¢ ŸÖŸÖŸÉŸÜ 1 ŸäŸàŸÖ ÿ£Ÿà ÿ£ŸÉÿ´ÿ±
#     'ROTATE_REFRESH_TOKENS': False,
#     'BLACKLIST_AFTER_ROTATION': False,
#     'AUTH_HEADER_TYPES': ('Bearer',),
# }


# SITE_DOMAIN = "https://freeze-parallel-generic-becoming.trycloudflare.com" 
# CSRF_COOKIE_NAME = 'csrftoken'

# # Application definition

# INSTALLED_APPS = [
#     'rest_framework',
#     'rest_framework_simplejwt',
#     'corsheaders',
#     'authentication',

#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',

#     'accounts',
#     'attendance',
#     'structure.apps.StructureConfig',
#     'courses',
#     'grades',
#     'dashboard',
#     'schedule',
#     'chatbot',
#     'recommendation',
#     'upload_center',
#     'quiz',
#     'django_extensions'
# ]

# MIDDLEWARE = [
#     "corsheaders.middleware.CorsMiddleware",

#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'project.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [BASE_DIR / 'templates'],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'project.wsgi.application'


# # Email
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'helwanuniversity82@gmail.com'  # ŸáŸÜÿß ÿ™ÿ≠ÿ∑ ÿßŸÑÿ•ŸäŸÖŸäŸÑ ÿ®ÿ™ÿßÿπŸÉ
# EMAIL_HOST_PASSWORD = 'kxcp kryq kbut kolg'  # ŸáŸÜÿß ÿ™ÿ≠ÿ∑ ÿßŸÑÿ®ÿßÿ≥Ÿàÿ±ÿØ ÿßŸÑŸÑŸä ŸÜÿ≥ÿÆÿ™Ÿá ŸÖŸÜ ŸÇÿ®ŸÑ
# DEFAULT_FROM_EMAIL = 'helwanuniversity82@gmail.com'  # ŸáŸÜÿß ÿ®ÿ±ÿ∂Ÿà ÿ™ÿ≠ÿ∑ ÿßŸÑÿ•ŸäŸÖŸäŸÑ ÿ®ÿ™ÿßÿπŸÉ


# # Database
# # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# # Password validation
# # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#         'OPTIONS': {'min_length': 8}
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.2/howto/static-files/

# STATIC_URL = '/static/'
# STATIC_ROOT = BASE_DIR / "staticfiles"
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST_FRAMEWORK = {         # jwt
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     )
# }

# FRONTEND_URL = 'http://localhost:3000'  # Replace with production URL
# REST_AUTH = {
#     'PASSWORD_RESET_USE_SITES_DOMAIN': False,
#     'FRONTEND_URL': FRONTEND_URL,
# }

# AUTHENTICATION_BACKENDS = [
#     'django.contrib.auth.backends.ModelBackend',
# ]



#####################################################################################################################


"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-o#!65#0zl887ux3bly7cz57vg952^su96f55!3fm9--u_7bo6+')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'False') == 'True'

# Allowed hosts for production
ALLOWED_HOSTS = [
    os.getenv('SITE_DOMAIN', 'freeze-parallel-generic-becoming.trycloudflare.com'),
    'localhost',
    '127.0.0.1',
]

# CORS settings
CORS_ALLOWED_ORIGINS = [
    os.getenv('FRONTEND_URL', 'http://localhost:3000'),
    os.getenv('SITE_DOMAIN', 'https://freeze-parallel-generic-becoming.trycloudflare.com'),
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = False

CORS_ALLOW_HEADERS = [
    'content-type',
    'authorization',
    'x-csrftoken',
    'accept',
]
CORS_ALLOW_METHODS = [
    'GET',
    'POST',
    'OPTIONS',
    'PUT',
    'DELETE',
    'PATCH',
]

# CSRF settings
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_NAME = 'csrftoken'
CSRF_TRUSTED_ORIGINS = [
    os.getenv('SITE_DOMAIN', 'https://freeze-parallel-generic-becoming.trycloudflare.com'),
    'http://localhost:8000',  # For development only
]

# JWT settings
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'ALGORITHM': 'HS256',
}

# Site domain
SITE_DOMAIN = os.getenv('SITE_DOMAIN', 'https://freeze-parallel-generic-becoming.trycloudflare.com')

# Additional security headers
X_FRAME_OPTIONS = 'DENY'
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True

# Application definition
INSTALLED_APPS = [
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'authentication',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'attendance',
    'structure.apps.StructureConfig',
    'courses',
    'grades',
    'dashboard',
    'schedule',
    'chatbot',
    'recommendation',
    'upload_center',
    'quiz',
    'django_extensions',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'

# Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER', 'helwanuniversity82@gmail.com')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD', 'kxcp kryq kbut kolg')
DEFAULT_FROM_EMAIL = os.getenv('EMAIL_HOST_USER', 'helwanuniversity82@gmail.com')

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {'min_length': 8},
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static and media files
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
FILE_UPLOAD_PERMISSIONS = 0o644

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

# Frontend URL
FRONTEND_URL = os.getenv('FRONTEND_URL', 'http://localhost:3000')
REST_AUTH = {
    'PASSWORD_RESET_USE_SITES_DOMAIN': False,
    'FRONTEND_URL': FRONTEND_URL,
}

# Authentication backends
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# Logging for security events
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/security.log',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django.security': {
            'handlers': ['file', 'console'],
            'level': 'WARNING',
            'propagate': False,
        },
    },
}